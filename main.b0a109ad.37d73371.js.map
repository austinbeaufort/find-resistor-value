{"version":3,"sources":["node_modules/parcel/src/builtins/hmr-runtime.js","src/domIds.ts","src/index.ts","src/main.ts"],"names":["checkedAssets","assetsToAccept","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","hmrAcceptCheck","id","modules","cached","cache","length","getParents","parents","k","d","dep","Array","isArray","concat","global","parcelRequire","some","every","generated","js","console","clear","hmrApply","Function","deps","v","hmrAcceptRun","cb","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","createElement","stackTrace","innerText","innerHTML","body","appendChild","getElementById","remove"],"mappings":"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","file":"main.b0a109ad.37d73371.js","sourceRoot":"..","sourcesContent":["var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] âœ¨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] ðŸš¨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">ðŸš¨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n","const form = document.querySelector('#form')\r\nconst message = document.querySelector('#message')\r\n\r\nexport { form, message }","import { form, message } from './domIds';\r\n\r\nconst main = ():void => {\r\n    form.addEventListener('submit', processForm)\r\n}\r\n\r\n\r\nconst processForm = (e): void => {\r\n    e.preventDefault()\r\n    const colors: Array<string> = getFormColors(e),\r\n          resistorMessage: string = getMessageToAppend(colors) \r\n    message.innerHTML = resistorMessage\r\n}\r\n\r\n\r\nconst getMessageToAppend = (colors: Array<string>): string => {\r\n    const [resistorValue, lowValue, highValue ] = calculateResistorValues(colors),\r\n          resistorMessage = `<h3>Resistor Value: ${resistorValue}Î©.</h3><h3>Low Tolerance: ${lowValue.toFixed(2)}Î©.</h3><h3>High Tolerance: ${highValue.toFixed(2)}Î©.</h3>`\r\n    return resistorMessage\r\n}\r\n\r\nconst calculateResistorValues = (colors: Array<string>): Array<number> => {\r\n    const tolerance = getTolerance(colors),\r\n          multiplier = getMultiplier(colors),\r\n          bandValue = getBandValue(colors),\r\n          resistorValue = bandValue * multiplier,\r\n          lowValue = resistorValue - (resistorValue * tolerance),\r\n          highValue = resistorValue + (resistorValue * tolerance)\r\n          return [resistorValue, lowValue, highValue]\r\n}\r\n\r\n\r\nconst getBandValue = (colors: Array<string>): number => {\r\n    const bandColors = colors.length === 5 ? colors.slice(0, 4) : colors.slice(0, 3),\r\n          bandString = bandColors.map(color => colorToBandValue(color)).join(''),\r\n          bandValue = parseInt(bandString)\r\n    return bandValue\r\n}\r\n\r\n\r\nconst colorToBandValue = (color: string): string => {\r\n    const bandValue =\r\n        color === 'black'  ? '0' :\r\n        color === 'brown'  ? '1' :\r\n        color === 'red'    ? '2' :\r\n        color === 'orange' ? '3' :\r\n        color === 'yellow' ? '4' :\r\n        color === 'green'  ? '5' :\r\n        color === 'blue'   ? '6' :\r\n        color === 'violet' ? '7' :\r\n        color === 'grey'   ? '8' : '9'\r\n    return bandValue\r\n}\r\n\r\n\r\nconst getMultiplier = (colors: Array<string>): number => {\r\n    const multiplier: number = \r\n        colors.length === 5 ? colorToMultiplier(colors[3]) : colorToMultiplier(colors[2])\r\n    return multiplier\r\n}\r\n\r\nconst colorToMultiplier = (color: string): number => {\r\n    const multiplier =\r\n        color === 'black'  ? 10**0 :\r\n        color === 'brown'  ? 10**1 :\r\n        color === 'red'    ? 10**2 :\r\n        color === 'orange' ? 10**3 :\r\n        color === 'yellow' ? 10**4 :\r\n        color === 'green'  ? 10**5 :\r\n        color === 'blue'   ? 10**6 :\r\n        color === 'violet' ? 10**7 :\r\n        color === 'grey'   ? 10**8 :\r\n        color === 'white'  ? 10**9 :\r\n        color === 'gold'   ? .1    : .01\r\n    return multiplier\r\n}\r\n\r\n\r\nconst getTolerance = (colors: Array<string>): number => {\r\n    const tolerance: number = \r\n        colors.length === 4 ? colorToTolerance(colors[3]) :\r\n        colors.length === 5 ? colorToTolerance(colors[4]) : .2\r\n    return tolerance\r\n}\r\n\r\nconst colorToTolerance = (color: string): number => {\r\n    const tolerance: number =\r\n        color === 'brown'  ? .01   :\r\n        color === 'red'    ? .02   :\r\n        color === 'green'  ? .005  :\r\n        color === 'blue'   ? .0025 :\r\n        color === 'violet' ? .001  :\r\n        color === 'grey'   ? .0005 :\r\n        color === 'gold'   ? .05   : .1\r\n    return tolerance\r\n}\r\n\r\nconst getFormColors = (e): Array<string> => {\r\n    const formColors = [e.target[0], e.target[1], e.target[2], e.target[3], e.target[4]],\r\n          colors = formColors.map(formColor => formColor.value),\r\n          colors2 = colors.filter(color => color !== 'empty')\r\n    return colors2\r\n}\r\n\r\nexport default main","import main from './index';\r\n\r\nmain()"]}